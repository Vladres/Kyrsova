[{"D:\\kyrsovaTESTAPP\\chat_application\\src\\index.js":"1","D:\\kyrsovaTESTAPP\\chat_application\\src\\App.js":"2","D:\\kyrsovaTESTAPP\\chat_application\\src\\components\\ChatFeed.jsx":"3","D:\\kyrsovaTESTAPP\\chat_application\\src\\components\\LoginForm.jsx":"4","D:\\kyrsovaTESTAPP\\chat_application\\src\\components\\MyMessage.jsx":"5","D:\\kyrsovaTESTAPP\\chat_application\\src\\components\\TheirMessage.jsx":"6","D:\\kyrsovaTESTAPP\\chat_application\\src\\components\\MessageForm.jsx":"7","D:\\kyrsovaTESTAPP\\chat_application\\src\\components\\Visualizator.jsx":"8"},{"size":153,"mtime":1618765737886,"results":"9","hashOfConfig":"10"},{"size":772,"mtime":1618765801522,"results":"11","hashOfConfig":"10"},{"size":2049,"mtime":1618766485899,"results":"12","hashOfConfig":"10"},{"size":1540,"mtime":1618765855962,"results":"13","hashOfConfig":"10"},{"size":3054,"mtime":1620751991964,"results":"14","hashOfConfig":"10"},{"size":3598,"mtime":1620751991968,"results":"15","hashOfConfig":"10"},{"size":1506,"mtime":1618765737885,"results":"16","hashOfConfig":"10"},{"size":2465,"mtime":1620576003514,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1e8wnj4",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"D:\\kyrsovaTESTAPP\\chat_application\\src\\index.js",[],["37","38"],"D:\\kyrsovaTESTAPP\\chat_application\\src\\App.js",[],"D:\\kyrsovaTESTAPP\\chat_application\\src\\components\\ChatFeed.jsx",[],"D:\\kyrsovaTESTAPP\\chat_application\\src\\components\\LoginForm.jsx",[],"D:\\kyrsovaTESTAPP\\chat_application\\src\\components\\MyMessage.jsx",["39","40","41","42","43","44","45"],"D:\\kyrsovaTESTAPP\\chat_application\\src\\components\\TheirMessage.jsx",["46","47","48","49","50","51"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Visualizator from './Visualizator'\r\n\r\nconst TheirMessage = ({ lastMessage, message }) => {\r\n  const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = (event) => {\r\n    setOpen(true);\r\n    const elements = document.getElementsByClassName('MuiDialog-root');\r\n    for (let element of elements) {\r\n      element?.classList?.remove('pointer-event-none');\r\n      element?.classList?.add('pointer-event-all');\r\n    };\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    setOpen(false);\r\n    const elements = document.getElementsByClassName('MuiDialog-root');\r\n    for (let element of elements) {\r\n      element?.classList?.remove('pointer-event-all');\r\n      element?.classList?.add('pointer-event-none');\r\n    };\r\n  };\r\n\r\n  const Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"message-row\">\r\n      {isFirstMessageByUser && (\r\n        <div\r\n          className=\"message-avatar\"\r\n          style={{ backgroundImage: message.sender && `url(${message.sender.avatar})` }}\r\n        />\r\n      )}\r\n      {message.attachments && message.attachments.length > 0\r\n        ? (\r\n          <div>\r\n            <button onClick={handleClickOpen}\r\n              style={{ float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px', padding: '1rem', cursor: 'pointer' }} className=\"message-image\"          >\r\n              {message.attachments[0].file}\r\n            </button>\r\n            <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n              <AppBar>\r\n                <Toolbar>\r\n                  <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                    <CloseIcon />\r\n                  </IconButton>\r\n                  <Typography variant=\"h6\">\r\n                    <button style={{ color: '#FFFFFF' }} color=\"inherit\" onClick={() => { window.open(`intent://arvr.google.com/scene-viewer/1.0?file=${message.attachments[0].file}#Intent;scheme=https;package=com.google.android.googlequicksearchbox;action=android.intent.action.VIEW;S.browser_fallback_url=https://developers.google.com/ar;end;`, '_blank') }}>\r\n                      View in AR\r\n                    </button>\r\n                  </Typography>\r\n                </Toolbar>\r\n              </AppBar>\r\n              <Visualizator message={message.attachments[0].file}></Visualizator>\r\n            </Dialog>\r\n          </div>\r\n        )\r\n        : (\r\n          <div className=\"message\" style={{ float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px' }}>\r\n            {message.text}\r\n          </div>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TheirMessage;\r\n","D:\\kyrsovaTESTAPP\\chat_application\\src\\components\\MessageForm.jsx",[],"D:\\kyrsovaTESTAPP\\chat_application\\src\\components\\Visualizator.jsx",["52","53","54"],"import React, { Component } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { GLTF, GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { GLTFExporter } from 'three/examples/jsm/exporters/GLTFExporter';\r\n\r\n\r\nclass Visualizator extends Component {\r\n  camera;\r\n  scene = new THREE.Scene();;\r\n  renderer = new THREE.WebGLRenderer({ alpha: true });\r\n  gltfLoader = new GLTFLoader();\r\n  loader;\r\n  exporter;\r\n  gridHelper\r\n  controls;\r\n  size = 10;\r\n  divisions = 10;\r\n  url;\r\n  model3D;\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.animate = this.animate.bind(this);\r\n    this.url = props.message;\r\n    this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight - 70);\r\n    this.loader = new GLTFLoader();\r\n    this.exporter = new GLTFExporter();\r\n    this.scene.background = new THREE.Color(0xdbdbdb);\r\n    document.body.appendChild( this.renderer.domElement );\r\n    // use ref as a mount point of the Three.js scene instead of the document.body\r\n\r\n    this.gridHelper = new THREE.GridHelper(this.size, this.divisions);\r\n    this.scene.add(this.gridHelper);\r\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n  }\r\n\r\n\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mount.appendChild(this.renderer.domElement);\r\n    this.loadAndAddToSceneGltf(this.url);\r\n    this.camera.position.z = 5;\r\n    this.animate();\r\n  }\r\n\r\n  animate() {\r\n    this.renderer.render(this.scene, this.camera);\r\n    requestAnimationFrame(this.animate);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div  ref={ref => (this.mount = ref)} />\r\n    )\r\n  }\r\n\r\n  exportToGltf() {\r\n    let result = this.exporter.parse(this.scene, (gltf) => {\r\n      console.log(gltf);\r\n\r\n      let blob = new Blob([gltf], { type: \"text/plain;charset=utf-8\" });\r\n      // saveAs(blob, \"filename.obj\");\r\n    }, { binary: true })\r\n  }\r\n\r\n  loadAndAddToSceneGltf(url) {\r\n    let objectToAdd = new THREE.Object3D();\r\n    this.gltfLoader.load(url, (gltf) => {\r\n      objectToAdd = gltf.scene;\r\n      this.model3D = objectToAdd;\r\n      this.scene.add(objectToAdd);\r\n    }, (xhr) => {\r\n     },\r\n      // called when loading has errors\r\n      (errorEvent) => {\r\n        console.error(errorEvent)\r\n      })\r\n  }\r\n}\r\n\r\nexport default Visualizator;",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":2,"column":10,"nodeType":"61","messageId":"62","endLine":2,"endColumn":20},{"ruleId":"59","severity":1,"message":"63","line":3,"column":8,"nodeType":"61","messageId":"62","endLine":3,"endColumn":14},{"ruleId":"59","severity":1,"message":"64","line":5,"column":8,"nodeType":"61","messageId":"62","endLine":5,"endColumn":20},{"ruleId":"59","severity":1,"message":"65","line":6,"column":8,"nodeType":"61","messageId":"62","endLine":6,"endColumn":16},{"ruleId":"59","severity":1,"message":"66","line":7,"column":8,"nodeType":"61","messageId":"62","endLine":7,"endColumn":12},{"ruleId":"59","severity":1,"message":"67","line":8,"column":8,"nodeType":"61","messageId":"62","endLine":8,"endColumn":15},{"ruleId":"68","severity":1,"message":"69","line":55,"column":17,"nodeType":"70","endLine":55,"endColumn":347},{"ruleId":"59","severity":1,"message":"60","line":2,"column":10,"nodeType":"61","messageId":"62","endLine":2,"endColumn":20},{"ruleId":"59","severity":1,"message":"63","line":3,"column":8,"nodeType":"61","messageId":"62","endLine":3,"endColumn":14},{"ruleId":"59","severity":1,"message":"64","line":5,"column":8,"nodeType":"61","messageId":"62","endLine":5,"endColumn":20},{"ruleId":"59","severity":1,"message":"65","line":6,"column":8,"nodeType":"61","messageId":"62","endLine":6,"endColumn":16},{"ruleId":"59","severity":1,"message":"66","line":7,"column":8,"nodeType":"61","messageId":"62","endLine":7,"endColumn":12},{"ruleId":"59","severity":1,"message":"67","line":8,"column":8,"nodeType":"61","messageId":"62","endLine":8,"endColumn":15},{"ruleId":"59","severity":1,"message":"71","line":4,"column":10,"nodeType":"61","messageId":"62","endLine":4,"endColumn":14},{"ruleId":"59","severity":1,"message":"72","line":66,"column":9,"nodeType":"61","messageId":"62","endLine":66,"endColumn":15},{"ruleId":"59","severity":1,"message":"73","line":69,"column":11,"nodeType":"61","messageId":"62","endLine":69,"endColumn":15},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'ListItemText' is defined but never used.","'ListItem' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'GLTF' is defined but never used.","'result' is assigned a value but never used.","'blob' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]